/**
 * Localization System for Serverless WebRTC Chat
 * Supports automatic language detection and manual language switching
 */

class Localization {
    constructor() {
        this.currentLanguage = 'en';
        this.supportedLanguages = ['en', 'ru'];
        this.translations = {
            en: {
                // Header
                'app.title': 'üìû Papaphone',
                'app.subtitle': 'Secure peer-to-peer calls for family connections',
                
                // Connection Status
                'status.initializing': 'Initializing...',
                'status.ready': 'Ready to connect',
                'status.connecting': 'Connecting...',
                'status.connected': 'Connected!',
                'status.error': 'Connection error',
                'status.creating': 'Creating call...',
                'status.joining': 'Joining call...',
                'status.processing': 'Processing answer...',
                'status.callReady': 'Call ready! Share the offer to connect.',
                'status.answerGenerated': 'Answer generated! Send it back to complete connection.',
                'status.connectedEstablishing': 'Connected! Establishing media...',
                'status.connectedWithMedia': 'Connected with media!',
                'status.connectionFailed': 'Connection failed',
                'status.connectionLost': 'Connection lost',
                'status.waitingRemoteMedia': 'Connected, waiting for remote media...',
                'status.noMediaStreams': 'Connected but no media streams',
                
                // Call Setup
                'setup.createCall': 'Create Call',
                'setup.createCallDescription': 'Create a secure peer-to-peer video call',
                'setup.or': 'OR',
                'setup.joinCall': 'Join a Call',
                'setup.joinCallDescription': 'Paste the offer you received:',
                'setup.offerPlaceholder': 'Paste the offer here...',
                'setup.joinCallButton': 'Join Call',
                
                // Call Created
                'created.title': 'Call Ready! üìû',
                'created.description': 'Copy this offer and send it to the person you want to call:',
                'created.copyOffer': 'Copy Offer',
                'created.offerStatus': 'Generating secure offer...',
                'created.offerReady': 'Offer ready! Copy and share it.',
                'created.waitingResponse': 'Waiting for Response',
                'created.waitingDescription': 'When the other person joins, they\'ll send you an answer. Paste it below:',
                'created.answerPlaceholder': 'Paste the answer here...',
                'created.startCall': 'Start Call',
                
                // Call Active
                'active.title': 'Connected! üìπ',
                'active.description': 'Copy this answer and send it back to complete the connection:',
                'active.copyAnswer': 'Copy Answer',
                'active.answerStatus': 'Generating answer...',
                'active.answerReady': 'Answer ready! Copy and send it back.',
                'active.callActiveTitle': 'Call Active!',
                'active.callActiveDescription': 'Send the answer above to complete the connection.',
                
                // Video Chat
                'video.you': 'You',
                'video.remote': 'Remote',
                
                // Chat
                'chat.title': 'üí¨ Chat',
                'chat.placeholder': 'Type a message...',
                'chat.send': 'Send',
                
                // File Transfer
                'file.title': 'üìÅ File Transfer',
                'file.send': 'Send File',
                'file.received': 'Received Files:',
                'file.download': 'Download',
                'file.sendProgress': 'Sending...',
                'file.receiveProgress': 'Receiving...',
                
                // Connection Info
                'info.title': 'üîó Connection Details',
                'info.connectionState': 'Connection State:',
                'info.iceState': 'ICE State:',
                'info.dataChannels': 'Data Channels:',
                
                // Instructions
                'instructions.title': 'üìã How to Use',
                'instructions.step1': '1. Click "Create Call" to start a new video call',
                'instructions.step2': '2. Copy the generated offer and send it to the person you want to call',
                'instructions.step3': '3. Wait for them to join and send you an answer',
                'instructions.step4': '4. Paste their answer to complete the connection',
                'instructions.joinStep1': '1. Get an offer from someone who created a call',
                'instructions.joinStep2': '2. Paste the offer and click "Join Call"',
                'instructions.joinStep3': '3. Copy the generated answer and send it back',
                'instructions.joinStep4': '4. Enjoy your secure peer-to-peer video call!',
                'instructions.security': 'üîí Your connection is completely peer-to-peer and secure',
                'instructions.noServers': 'üåê No data passes through our servers',
                
                // Toast Messages
                'toast.offerCopied': 'Offer copied to clipboard!',
                'toast.answerCopied': 'Answer copied to clipboard!',
                'toast.noOfferToCopy': 'No offer to copy',
                'toast.noAnswerToCopy': 'No answer to copy',
                'toast.pasteOfferFirst': 'Please paste the offer first',
                'toast.pasteAnswer': 'Please paste the answer',
                'toast.connectedSuccessfully': 'Connected successfully!',
                'toast.fileSelected': 'File selected: {fileName} ({fileSize})',
                'toast.fileSent': 'File sent successfully!',
                'toast.fileReceived': 'File received successfully!',
                'toast.receivingFile': 'Receiving file: {fileName}',
                'toast.failedCreateCall': 'Failed to create call: {error}',
                'toast.failedJoinCall': 'Failed to join call: {error}',
                'toast.failedProcessAnswer': 'Failed to process answer: {error}',
                'toast.failedSendMessage': 'Failed to send message',
                'toast.failedSendFile': 'Failed to send file: {error}',
                'toast.failedReceiveFile': 'Failed to receive file: {error}',
                'toast.failedCopyOffer': 'Failed to copy offer',
                'toast.failedCopyAnswer': 'Failed to copy answer',
                'toast.failedAccessMedia': 'Failed to access camera/microphone',
                'toast.audioOnlyMode': 'Video unavailable, using audio only',
                'toast.noMediaAccess': 'No media access available',
                'toast.reconnecting': 'Reconnecting...',
                'toast.reconnectionAttempted': 'Reconnection attempted',
                'toast.reconnectionFailed': 'Reconnection failed',
                'toast.connectionFailedRetrying': 'Connection failed - trying to reconnect...',
                'toast.connectionLostRetrying': 'Connection lost - trying to reconnect...',
                'toast.connectedWithVideoAudio': 'Successfully connected with video/audio!',
                'toast.connectedWaitingRemote': 'Connected! Waiting for remote video/audio...',
                'toast.connectedNoMedia': 'Connected but no video/audio detected',
                
                // Language
                'language.select': 'Language',
                'language.english': 'English',
                'language.russian': '–†—É—Å—Å–∫–∏–π'
            },
            ru: {
                // Header
                'app.title': 'üìû –ü–∞–ø–∞—Ñ–æ–Ω',
                'app.subtitle': '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ P2P –∑–≤–æ–Ω–∫–∏ –¥–ª—è —Å–µ–º–µ–π–Ω—ã—Ö —Å–≤—è–∑–µ–π',
                
                // Connection Status
                'status.initializing': '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...',
                'status.ready': '–ì–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é',
                'status.connecting': '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...',
                'status.connected': '–ü–æ–¥–∫–ª—é—á–µ–Ω!',
                'status.error': '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
                'status.creating': '–°–æ–∑–¥–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–∞...',
                'status.joining': '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∑–≤–æ–Ω–∫—É...',
                'status.processing': '–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞...',
                'status.callReady': '–ó–≤–æ–Ω–æ–∫ –≥–æ—Ç–æ–≤! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.',
                'status.answerGenerated': '–û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.',
                'status.connectedEstablishing': '–ü–æ–¥–∫–ª—é—á–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ–¥–∏–∞...',
                'status.connectedWithMedia': '–ü–æ–¥–∫–ª—é—á–µ–Ω —Å –º–µ–¥–∏–∞!',
                'status.connectionFailed': '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å',
                'status.connectionLost': '–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ',
                'status.waitingRemoteMedia': '–ü–æ–¥–∫–ª—é—á–µ–Ω, –æ–∂–∏–¥–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –º–µ–¥–∏–∞...',
                'status.noMediaStreams': '–ü–æ–¥–∫–ª—é—á–µ–Ω, –Ω–æ –Ω–µ—Ç –º–µ–¥–∏–∞ –ø–æ—Ç–æ–∫–æ–≤',
                
                // Call Setup
                'setup.createCall': '–°–æ–∑–¥–∞—Ç—å –∑–≤–æ–Ω–æ–∫',
                'setup.createCallDescription': '–°–æ–∑–¥–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π P2P –≤–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫',
                'setup.or': '–ò–õ–ò',
                'setup.joinCall': '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∑–≤–æ–Ω–∫—É',
                'setup.joinCallDescription': '–í—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:',
                'setup.offerPlaceholder': '–í—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å—é–¥–∞...',
                'setup.joinCallButton': '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è',
                
                // Call Created
                'created.title': '–ó–≤–æ–Ω–æ–∫ –≥–æ—Ç–æ–≤! üìû',
                'created.description': '–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å:',
                'created.copyOffer': '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
                'created.offerStatus': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è...',
                'created.offerReady': '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ! –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–º.',
                'created.waitingResponse': '–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞',
                'created.waitingDescription': '–ö–æ–≥–¥–∞ –¥—Ä—É–≥–æ–π —á–µ–ª–æ–≤–µ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è, –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –æ—Ç–≤–µ—Ç. –í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∏–∂–µ:',
                'created.answerPlaceholder': '–í—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç —Å—é–¥–∞...',
                'created.startCall': '–ù–∞—á–∞—Ç—å –∑–≤–æ–Ω–æ–∫',
                
                // Call Active
                'active.title': '–ü–æ–¥–∫–ª—é—á–µ–Ω! üìπ',
                'active.description': '–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:',
                'active.copyAnswer': '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç',
                'active.answerStatus': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞...',
                'active.answerReady': '–û—Ç–≤–µ—Ç –≥–æ—Ç–æ–≤! –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ.',
                'active.callActiveTitle': '–ó–≤–æ–Ω–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω!',
                'active.callActiveDescription': '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –≤—ã—à–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.',
                
                // Video Chat
                'video.you': '–í—ã',
                'video.remote': '–£–¥–∞–ª–µ–Ω–Ω—ã–π',
                
                // Chat
                'chat.title': 'üí¨ –ß–∞—Ç',
                'chat.placeholder': '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...',
                'chat.send': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
                
                // File Transfer
                'file.title': 'üìÅ –ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤',
                'file.send': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª',
                'file.received': '–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:',
                'file.download': '–°–∫–∞—á–∞—Ç—å',
                'file.sendProgress': '–û—Ç–ø—Ä–∞–≤–∫–∞...',
                'file.receiveProgress': '–ü–æ–ª—É—á–µ–Ω–∏–µ...',
                
                // Connection Info
                'info.title': 'üîó –î–µ—Ç–∞–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
                'info.connectionState': '–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:',
                'info.iceState': '–°–æ—Å—Ç–æ—è–Ω–∏–µ ICE:',
                'info.dataChannels': '–ö–∞–Ω–∞–ª—ã –¥–∞–Ω–Ω—ã—Ö:',
                
                // Instructions
                'instructions.title': 'üìã –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å',
                'instructions.step1': '1. –ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –∑–≤–æ–Ω–æ–∫" –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞',
                'instructions.step2': '2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å',
                'instructions.step3': '3. –î–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ –æ–Ω–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—Å—è –∏ –æ—Ç–ø—Ä–∞–≤—è—Ç –≤–∞–º –æ—Ç–≤–µ—Ç',
                'instructions.step4': '4. –í—Å—Ç–∞–≤—å—Ç–µ –∏—Ö –æ—Ç–≤–µ—Ç –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
                'instructions.joinStep1': '1. –ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç –∫–æ–≥–æ-—Ç–æ, –∫—Ç–æ —Å–æ–∑–¥–∞–ª –∑–≤–æ–Ω–æ–∫',
                'instructions.joinStep2': '2. –í—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è"',
                'instructions.joinStep3': '3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ',
                'instructions.joinStep4': '4. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º P2P –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–æ–º!',
                'instructions.security': 'üîí –í–∞—à–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é P2P –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ',
                'instructions.noServers': 'üåê –ù–∏–∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –Ω–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã',
                
                // Toast Messages
                'toast.offerCopied': '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!',
                'toast.answerCopied': '–û—Ç–≤–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!',
                'toast.noOfferToCopy': '–ù–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è',
                'toast.noAnswerToCopy': '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è',
                'toast.pasteOfferFirst': '–°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
                'toast.pasteAnswer': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç',
                'toast.connectedSuccessfully': '–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!',
                'toast.fileSelected': '–§–∞–π–ª –≤—ã–±—Ä–∞–Ω: {fileName} ({fileSize})',
                'toast.fileSent': '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!',
                'toast.fileReceived': '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!',
                'toast.receivingFile': '–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {fileName}',
                'toast.failedCreateCall': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–≤–æ–Ω–æ–∫: {error}',
                'toast.failedJoinCall': '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∑–≤–æ–Ω–∫—É: {error}',
                'toast.failedProcessAnswer': '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç: {error}',
                'toast.failedSendMessage': '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',
                'toast.failedSendFile': '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {error}',
                'toast.failedReceiveFile': '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª: {error}',
                'toast.failedCopyOffer': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
                'toast.failedCopyAnswer': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç',
                'toast.failedAccessMedia': '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ/–º–∏–∫—Ä–æ—Ñ–æ–Ω—É',
                'toast.audioOnlyMode': '–í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ',
                'toast.noMediaAccess': '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –º–µ–¥–∏–∞',
                'toast.reconnecting': '–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...',
                'toast.reconnectionAttempted': '–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞',
                'toast.reconnectionFailed': '–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å',
                'toast.connectionFailedRetrying': '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å - –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...',
                'toast.connectionLostRetrying': '–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ - –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...',
                'toast.connectedWithVideoAudio': '–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω —Å –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ!',
                'toast.connectedWaitingRemote': '–ü–æ–¥–∫–ª—é—á–µ–Ω! –û–∂–∏–¥–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ...',
                'toast.connectedNoMedia': '–ü–æ–¥–∫–ª—é—á–µ–Ω, –Ω–æ –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ',
                
                // Language
                'language.select': '–Ø–∑—ã–∫',
                'language.english': 'English',
                'language.russian': '–†—É—Å—Å–∫–∏–π'
            }
        };
        
        this.detectLanguage();
    }
    
    detectLanguage() {
        // Try to detect language from browser settings
        const browserLang = navigator.language || navigator.languages?.[0] || 'en';
        const langCode = browserLang.split('-')[0].toLowerCase();
        
        // Check if detected language is supported
        if (this.supportedLanguages.includes(langCode)) {
            this.currentLanguage = langCode;
        } else {
            this.currentLanguage = 'en'; // Default to English
        }
        
        // Check localStorage for saved preference
        const savedLang = localStorage.getItem('webrtc-language');
        if (savedLang && this.supportedLanguages.includes(savedLang)) {
            this.currentLanguage = savedLang;
        }
        
        console.log('Detected language:', this.currentLanguage);
    }
    
    setLanguage(langCode) {
        if (this.supportedLanguages.includes(langCode)) {
            this.currentLanguage = langCode;
            localStorage.setItem('webrtc-language', langCode);
            this.updateDOM();
        }
    }
    
    t(key, params = {}) {
        const translation = this.translations[this.currentLanguage]?.[key] || 
                          this.translations['en'][key] || 
                          key;
        
        // Replace parameters in the translation
        return translation.replace(/\{(\w+)\}/g, (match, paramKey) => {
            return params[paramKey] || match;
        });
    }
    
    updateDOM() {
        // Update all elements with data-i18n attribute
        document.querySelectorAll('[data-i18n]').forEach(element => {
            const key = element.getAttribute('data-i18n');
            if (element.tagName === 'INPUT' && (element.type === 'text' || element.type === 'textarea')) {
                element.placeholder = this.t(key);
            } else if (element.tagName === 'TEXTAREA') {
                element.placeholder = this.t(key);
            } else {
                element.textContent = this.t(key);
            }
        });
        
        // Update elements with data-i18n-html attribute (for HTML content)
        document.querySelectorAll('[data-i18n-html]').forEach(element => {
            const key = element.getAttribute('data-i18n-html');
            element.innerHTML = this.t(key);
        });
        
        // Update document language attribute
        document.documentElement.lang = this.currentLanguage;
    }
    
    getCurrentLanguage() {
        return this.currentLanguage;
    }
    
    getSupportedLanguages() {
        return this.supportedLanguages;
    }
}

// Export for use in other files
window.Localization = Localization;
